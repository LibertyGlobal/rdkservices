/*
 * Generated by gdbus-codegen 2.56.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __WIFIMANAGEMENT1_AUTOGEN_H__
#define __WIFIMANAGEMENT1_AUTOGEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.lgi.rdk.utils.wifimanagement1 */

#define TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1 (com_lgi_rdk_utils_wifimanagement1_get_type ())
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1, ComLgiRdkUtilsWifimanagement1))
#define IS_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1))
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1, ComLgiRdkUtilsWifimanagement1Iface))

struct _ComLgiRdkUtilsWifimanagement1;
typedef struct _ComLgiRdkUtilsWifimanagement1 ComLgiRdkUtilsWifimanagement1;
typedef struct _ComLgiRdkUtilsWifimanagement1Iface ComLgiRdkUtilsWifimanagement1Iface;

struct _ComLgiRdkUtilsWifimanagement1Iface
{
  GTypeInterface parent_iface;

  gboolean (*handle_cancel_connect) (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id);

  gboolean (*handle_connect_hidden_ssid) (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id,
    const gchar *arg_ssid,
    GVariant *arg_params);

  gboolean (*handle_connect_ssid) (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id,
    const gchar *arg_netid,
    GVariant *arg_params);

  gboolean (*handle_connect_wps) (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id,
    const gchar *arg_pin);

  gboolean (*handle_get_ssidparams) (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id,
    const gchar *arg_netid);

  gboolean (*handle_get_ssids) (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id);

};

GType com_lgi_rdk_utils_wifimanagement1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lgi_rdk_utils_wifimanagement1_interface_info (void);
guint com_lgi_rdk_utils_wifimanagement1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lgi_rdk_utils_wifimanagement1_complete_get_ssids (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    gint status,
    guint count,
    const gchar *const *netids,
    GVariant *basic_params);

void com_lgi_rdk_utils_wifimanagement1_complete_get_ssidparams (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    gint status,
    guint count,
    GVariant *params);

void com_lgi_rdk_utils_wifimanagement1_complete_connect_ssid (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    gint status);

void com_lgi_rdk_utils_wifimanagement1_complete_connect_hidden_ssid (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    gint status);

void com_lgi_rdk_utils_wifimanagement1_complete_connect_wps (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    gint status);

void com_lgi_rdk_utils_wifimanagement1_complete_cancel_connect (
    ComLgiRdkUtilsWifimanagement1 *object,
    GDBusMethodInvocation *invocation,
    gint status);



/* D-Bus method calls: */
void com_lgi_rdk_utils_wifimanagement1_call_get_ssids (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lgi_rdk_utils_wifimanagement1_call_get_ssids_finish (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    gint *out_status,
    guint *out_count,
    gchar ***out_netids,
    GVariant **out_basic_params,
    GAsyncResult *res,
    GError **error);

gboolean com_lgi_rdk_utils_wifimanagement1_call_get_ssids_sync (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    gint *out_status,
    guint *out_count,
    gchar ***out_netids,
    GVariant **out_basic_params,
    GCancellable *cancellable,
    GError **error);

void com_lgi_rdk_utils_wifimanagement1_call_get_ssidparams (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_netid,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lgi_rdk_utils_wifimanagement1_call_get_ssidparams_finish (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    gint *out_status,
    guint *out_count,
    GVariant **out_params,
    GAsyncResult *res,
    GError **error);

gboolean com_lgi_rdk_utils_wifimanagement1_call_get_ssidparams_sync (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_netid,
    gint *out_status,
    guint *out_count,
    GVariant **out_params,
    GCancellable *cancellable,
    GError **error);

void com_lgi_rdk_utils_wifimanagement1_call_connect_ssid (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_netid,
    GVariant *arg_params,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lgi_rdk_utils_wifimanagement1_call_connect_ssid_finish (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    gint *out_status,
    GAsyncResult *res,
    GError **error);

gboolean com_lgi_rdk_utils_wifimanagement1_call_connect_ssid_sync (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_netid,
    GVariant *arg_params,
    gint *out_status,
    GCancellable *cancellable,
    GError **error);

void com_lgi_rdk_utils_wifimanagement1_call_connect_hidden_ssid (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_ssid,
    GVariant *arg_params,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lgi_rdk_utils_wifimanagement1_call_connect_hidden_ssid_finish (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    gint *out_status,
    GAsyncResult *res,
    GError **error);

gboolean com_lgi_rdk_utils_wifimanagement1_call_connect_hidden_ssid_sync (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_ssid,
    GVariant *arg_params,
    gint *out_status,
    GCancellable *cancellable,
    GError **error);

void com_lgi_rdk_utils_wifimanagement1_call_connect_wps (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_pin,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lgi_rdk_utils_wifimanagement1_call_connect_wps_finish (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    gint *out_status,
    GAsyncResult *res,
    GError **error);

gboolean com_lgi_rdk_utils_wifimanagement1_call_connect_wps_sync (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    const gchar *arg_pin,
    gint *out_status,
    GCancellable *cancellable,
    GError **error);

void com_lgi_rdk_utils_wifimanagement1_call_cancel_connect (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lgi_rdk_utils_wifimanagement1_call_cancel_connect_finish (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    gint *out_status,
    GAsyncResult *res,
    GError **error);

gboolean com_lgi_rdk_utils_wifimanagement1_call_cancel_connect_sync (
    ComLgiRdkUtilsWifimanagement1 *proxy,
    const gchar *arg_id,
    gint *out_status,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY (com_lgi_rdk_utils_wifimanagement1_proxy_get_type ())
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY, ComLgiRdkUtilsWifimanagement1Proxy))
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY, ComLgiRdkUtilsWifimanagement1ProxyClass))
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY, ComLgiRdkUtilsWifimanagement1ProxyClass))
#define IS_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY))
#define IS_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_PROXY))

typedef struct _ComLgiRdkUtilsWifimanagement1Proxy ComLgiRdkUtilsWifimanagement1Proxy;
typedef struct _ComLgiRdkUtilsWifimanagement1ProxyClass ComLgiRdkUtilsWifimanagement1ProxyClass;
typedef struct _ComLgiRdkUtilsWifimanagement1ProxyPrivate ComLgiRdkUtilsWifimanagement1ProxyPrivate;

struct _ComLgiRdkUtilsWifimanagement1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgiRdkUtilsWifimanagement1ProxyPrivate *priv;
};

struct _ComLgiRdkUtilsWifimanagement1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lgi_rdk_utils_wifimanagement1_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ComLgiRdkUtilsWifimanagement1Proxy, g_object_unref)
#endif

void com_lgi_rdk_utils_wifimanagement1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgiRdkUtilsWifimanagement1 *com_lgi_rdk_utils_wifimanagement1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgiRdkUtilsWifimanagement1 *com_lgi_rdk_utils_wifimanagement1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lgi_rdk_utils_wifimanagement1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgiRdkUtilsWifimanagement1 *com_lgi_rdk_utils_wifimanagement1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgiRdkUtilsWifimanagement1 *com_lgi_rdk_utils_wifimanagement1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON (com_lgi_rdk_utils_wifimanagement1_skeleton_get_type ())
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON, ComLgiRdkUtilsWifimanagement1Skeleton))
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON, ComLgiRdkUtilsWifimanagement1SkeletonClass))
#define COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON, ComLgiRdkUtilsWifimanagement1SkeletonClass))
#define IS_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON))
#define IS_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGI_RDK_UTILS_WIFIMANAGEMENT1_SKELETON))

typedef struct _ComLgiRdkUtilsWifimanagement1Skeleton ComLgiRdkUtilsWifimanagement1Skeleton;
typedef struct _ComLgiRdkUtilsWifimanagement1SkeletonClass ComLgiRdkUtilsWifimanagement1SkeletonClass;
typedef struct _ComLgiRdkUtilsWifimanagement1SkeletonPrivate ComLgiRdkUtilsWifimanagement1SkeletonPrivate;

struct _ComLgiRdkUtilsWifimanagement1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgiRdkUtilsWifimanagement1SkeletonPrivate *priv;
};

struct _ComLgiRdkUtilsWifimanagement1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lgi_rdk_utils_wifimanagement1_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ComLgiRdkUtilsWifimanagement1Skeleton, g_object_unref)
#endif

ComLgiRdkUtilsWifimanagement1 *com_lgi_rdk_utils_wifimanagement1_skeleton_new (void);


G_END_DECLS

#endif /* __WIFIMANAGEMENT1_AUTOGEN_H__ */
