{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "DisplayInfo API",
        "class": "DisplayInfo",
        "description": "The `DisplayInfo` plugin allows you to retrieve various display-related information"
    },
    "common": {
        "errors": {
            "general": {
                "code": 1,
                "message": "ERROR_GENERAL"
            },
            "unavailable": {
                "code": 2,
                "message": "ERROR_UNAVAILABLE"
            },
            "asyncfailed": {
                "code": 3,
                "message": "ERROR_ASYNC_FAILED"
            },
            "asyncaborted": {
                "code": 4,
                "message": "ERROR_ASYNC_ABORTED"
            },
            "illegalstate": {
                "code": 5,
                "message": "ERROR_ILLEGAL_STATE"
            },
            "openingfailed": {
                "code": 6,
                "message": "ERROR_OPENING_FAILED"
            },
            "acceptfailed": {
                "code": 7,
                "message": "ERROR_ACCEPT_FAILED"
            },
            "pendingshutdown": {
                "code": 8,
                "message": "ERROR_PENDING_SHUTDOWN"
            },
            "alreadyconnected": {
                "code": 9,
                "message": "ERROR_ALREADY_CONNECTED"
            },
            "connectionclosed": {
                "code": 10,
                "message": "ERROR_CONNECTION_CLOSED"
            },
            "timedout": {
                "code": 11,
                "message": "ERROR_TIMEDOUT"
            },
            "inprogress": {
                "code": 12,
                "message": "ERROR_INPROGRESS",
                "description": "Operation in progress"
            },
            "couldnotsetaddress": {
                "code": 13,
                "message": "ERROR_COULD_NOT_SET_ADDRESS"
            },
            "incorrecthash": {
                "code": 14,
                "message": "ERROR_INCORRECT_HASH",
                "description": "Incorrect hash given"
            },
            "incorrecturl": {
                "code": 15,
                "message": "ERROR_INCORRECT_URL",
                "description": "Incorrect URL given"
            },
            "invalidinputlength": {
                "code": 16,
                "message": "ERROR_INVALID_INPUT_LENGTH"
            },
            "destructionsucceeded": {
                "code": 17,
                "message": "ERROR_DESTRUCTION_SUCCEEDED"
            },
            "destructionfailed": {
                "code": 18,
                "message": "ERROR_DESTRUCTION_FAILED"
            },
            "closingfailed": {
                "code": 19,
                "message": "ERROR_CLOSING_FAILED"
            },
            "processterminated": {
                "code": 20,
                "message": "ERROR_PROCESS_TERMINATED"
            },
            "processkilled": {
                "code": 21,
                "message": "ERROR_PROCESS_KILLED"
            },
            "unknownkey": {
                "code": 22,
                "message": "ERROR_UNKNOWN_KEY"
            },
            "incompleteconfig": {
                "code": 23,
                "message": "ERROR_INCOMPLETE_CONFIG"
            },
            "privilegedrequest": {
                "code": 24,
                "message": "ERROR_PRIVILEGED_REQUEST"
            },
            "rpccallfailed": {
                "code": 25,
                "message": "ERROR_RPC_CALL_FAILED"
            },
            "unreachablenetwork": {
                "code": 26,
                "message": "ERROR_UNREACHABLE_NETWORK"
            },
            "requestsubmitted": {
                "code": 27,
                "message": "ERROR_REQUEST_SUBMITTED"
            },
                "unknowntable": {
                "code": 28,
                "message": "ERROR_UNKNOWN_TABLE"
            },
            "duplicatekey": {
                "code": 29,
                "message": "ERROR_DUPLICATE_KEY"
            },
            "badrequest": {
                "code": 30,
                "message": "ERROR_BAD_REQUEST"
            },
            "pendingconditions": {
                "code": 31,
                "message": "ERROR_PENDING_CONDITIONS"
            },
            "surfaceunavailable": {
                "code": 32,
                "message": "ERROR_SURFACE_UNAVAILABLE"
            },
            "playerunavailable": {
                "code": 33,
                "message": "ERROR_PLAYER_UNAVAILABLE"
            },
            "firstresourcenotfound": {
                "code": 34,
                "message": "ERROR_FIRST_RESOURCE_NOT_FOUND"
            },
            "secondsourcenotfound": {
                "code": 35,
                "message": "ERROR_SECOND_RESOURCE_NOT_FOUND"
            },
            "alreadyreleased": {
                "code": 36,
                "message": "ERROR_ALREADY_RELEASED"
            },
            "negtiveacknowledge": {
                "code": 37,
                "message": "ERROR_NEGATIVE_ACKNOWLEDGE"
            },
            "invalidsignature": {
                "code": 38,
                "message": "ERROR_INVALID_SIGNATURE"
            },
            "readerror": {
                "code": 39,
                "message": "ERROR_READ_ERROR"
            },
            "writeerror": {
                "code": 40,
                "message": "ERROR_WRITE_ERROR"
            },
            "invaliddesignator": {
                "code": 41,
                "message": "ERROR_INVALID_DESIGNATOR"
            },
            "unauthenticated": {
                "code": 42,
                "message": "ERROR_UNAUTHENTICATED"
            },
            "notexist": {
                "code": 43,
                "message": "ERROR_NOT_EXIST"
            },
            "notsupported": {
                "code": 44,
                "message": "ERROR_NOT_SUPPORTED"
            }
        },
        "results": {
            "void": {
                "type": "null",
                "default": null,
                "description": "Always null"
            }
        },
        "result": {
            "type":"object",
            "properties": {
                "success": {
                    "$ref": "#/common/success"
                }
            },
            "required": [
                "success"
            ]
        },
        "success": {
            "summary": "Whether the request succeeded",
            "type": "boolean",
            "example": "true"
        }
    },
    "definitions": {
        "length": {
            "summary": "The EDID length",
            "type": "integer",
            "example": 0
        }
    },
    "methods": {
        "edid": {
            "summary": "Returns the TV's Extended Display Identification Data (EDID)",
            "params": {
                "type": "object",
                "properties": {
                    "length": {
                        "$ref": "#/definitions/length"
                    }
                },
                "required": [
                    "length"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "length": {
                        "$ref": "#/definitions/length"
                    },
                    "data": {
                        "summary": "The EDID data",
                        "type":"string",
                        "example": ""
                    }
                },
                "required": [
                    "length",
                    "data"
                ]
            }
        },
        "widthincentimeters": {
            "summary": "Horizontal size in centimeters",
            "result": {
                "type":"integer",
                "example": 0
            }
        },
        "heightincentimeters": {
            "summary": "Vertical size in centimeters",
            "result": {
                "type":"integer",
                "example": 0
            }
        }
    },
    "properties": {
        "totalgpuram": {
            "summary": "Total GPU DRAM memory (in bytes)",
            "readonly": true,
            "params": {
                "type": "integer",
                "size": 64,
                "example": 381681664
            }
        },
        "freegpuram": {
            "summary": "Free GPU DRAM memory (in bytes)",
            "readonly": true,
            "params": {
                "type": "integer",
                "size": 64,
                "example": 358612992
            }
        },
        "isaudiopassthrough": {
            "summary": "Current audio passthrough status on HDMI",
            "readonly": true,
            "params": {
                "type": "boolean",
                "example": false
            }
        },
        "connected": {
            "summary": "Current HDMI connection status",
            "readonly": true,
            "params": {
                "type": "boolean",
                "example": true
            }
        },
        "width": {
            "summary": "Horizontal resolution of the TV",
            "readonly": true,
            "params": {
                "type": "integer",
                "size": 32,
                "example": 1280
            }
        },
        "height": {
            "summary": "Vertical resolution of the TV",
            "readonly": true,
            "params": {
                "type": "integer",
                "size": 32,
                "example": 720
            }
        },
        "verticalfreq": {
            "summary": "Vertical Frequency",
            "readonly": true,
            "params": {
                "type": "integer",
                "size": 32,
                "example": 0
            }
        },
        "hdcpprotection": {
            "summary": "HDCP protocol used for transmission",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [
                    "HdcpUnencrypted",
                    "Hdcp1x",
                    "Hdcp2x",
                    "HdcpAuto"
                ],
                "example": "Hdcp1x"
            }
        },
        "portname": {
            "summary": "Video output port on the STB used for connecting to the TV",
            "readonly": true,
            "params": {
                "type": "string",
                "example": "hdmi"
            }
        },
        "tvcapabilities": {
            "summary": "HDR formats supported by the TV",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [
                    "HdrOff",
                    "Hdr10",
                    "Hdr10Plus",
                    "HdrHlg",
                    "HdrDolbyvision",
                    "HdrTechnicolor"
                ],
                "example": "HdrOff"
            }
        },
        "stbcapabilities": {
            "summary": "HDR formats supported by the STB",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ 
                    "HdrOff",
                    "Hdr10",
                    "Hdr10Plus",
                    "HdrHlg",
                    "HdrDolbyvision",
                    "HdrTechnicolor"
                ],
                "example": "HdrOff"
            }
        },
        "hdrsetting": {
            "summary": "HDR format in use",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ 
                    "HdrOff",
                    "Hdr10",
                    "Hdr10Plus",
                    "HdrHlg",
                    "HdrDolbyvision",
                    "HdrTechnicolor"
                ],
                "example": "HdrOff"
            }            
        },
        "colorspace": {
            "summary": "Display color space (chroma subsampling format)",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ "FORMAT_UNKNOWN",
                    "FORMAT_OTHER",
                    "FORMAT_RGB_444",
                    "FORMAT_YCBCR_444",
                    "FORMAT_YCBCR_422",
                    "FORMAT_YCBCR_420"
                ],
                "example": "FORMAT_RGB_444"
            }            
        },
        "framerate": {
            "summary": "Display frame rate",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ 
                    "FRAMERATE_UNKNOWN",
                    "FRAMERATE_23_976",
                    "FRAMERATE_24",
                    "FRAMERATE_25",
                    "FRAMERATE_29_97",
                    "FRAMERATE_30",
                    "FRAMERATE_47_952",
                    "FRAMERATE_48",
                    "FRAMERATE_50",
                    "FRAMERATE_59_94",
                    "FRAMERATE_60",
                    "FRAMERATE_119_88",
                    "FRAMERATE_120",
                    "FRAMERATE_144"
                 ],
                "example": "FRAMERATE_60"
            }            
        },
        "colourdepth": {
            "summary": "Display colour depth",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ 
                    "COLORDEPTH_UNKNOWN",
                    "COLORDEPTH_8_BIT",
                    "COLORDEPTH_10_BIT",
                    "COLORDEPTH_12_BIT"
                 ],
                "example": "COLORDEPTH_8_BIT"
            }            
        },
        "quantizationrange": {
            "summary": "Display quantization range",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ 
                    "QUANTIZATIONRANGE_UNKNOWN",
                    "QUANTIZATIONRANGE_LIMITED",
                    "QUANTIZATIONRANGE_FULL"
                ],
                "example": "QUANTIZATIONRANGE_UNKNOWN"
            }            
        },
        "colorimetry": {
            "summary": "Display colorimetry",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ 
                    "COLORIMETRY_UNKNOWN",
                    "COLORIMETRY_OTHER",
                    "COLORIMETRY_SMPTE170M",
                    "COLORIMETRY_BT709",
                    "COLORIMETRY_XVYCC601",
                    "COLORIMETRY_XVYCC709",
                    "COLORIMETRY_SYCC601",
                    "COLORIMETRY_OPYCC601",
                    "COLORIMETRY_OPRGB",
                    "COLORIMETRY_BT2020YCCBCBRC",
                    "COLORIMETRY_BT2020RGB_YCBCR"
                ],
                "example": "COLORIMETRY_OTHER"
            }            
        },
        "eotf": {
            "summary": "Display Electro Optical Transfer Function (EOTF)",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [ 
                    "EOTF_UNKNOWN",
                    "EOTF_OTHER",
                    "EOTF_BT1886",
                    "EOTF_BT2100",
                    "EOTF_SMPTE_ST_2084"
                 ],
                "example": "EOTF_SMPTE_ST_2084"
            }            
        }
    },
    "events": {
        "updated": {
            "summary": "Triggered when the connection changes or is updated",
            "params": {
                "type": "object",
                "properties": {
                    "event": {
                        "summary": "The type of change",
                        "enum": [
                            "PreResolutionChange",
                            "PostResolutionChange",
                            "HdmiChange",
                            "HdcpChange"                            
                        ],
                        "type": "string",
                        "example": "HdmiChange"
                    }
                },
                "required": [
                    "event"
                ]
            }
        }
    }
}
