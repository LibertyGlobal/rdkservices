{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "HdcpProfile API", 
        "class": "org.rdk.HdcpProfile", 
        "description": "The HdcpProfile plugin provides an interface for HDCP-related data and events."
    },
    "common": {
        "errors": {
            "general": {
                "code": 1,
                "message": "ERROR_GENERAL"
            },
            "unavailable": {
                "code": 2,
                "message": "ERROR_UNAVAILABLE"
            },
            "asyncfailed": {
                "code": 3,
                "message": "ERROR_ASYNC_FAILED"
            },
            "asyncaborted": {
                "code": 4,
                "message": "ERROR_ASYNC_ABORTED"
            },
            "illegalstate": {
                "code": 5,
                "message": "ERROR_ILLEGAL_STATE"
            },
            "openingfailed": {
                "code": 6,
                "message": "ERROR_OPENING_FAILED"
            },
            "acceptfailed": {
                "code": 7,
                "message": "ERROR_ACCEPT_FAILED"
            },
            "pendingshutdown": {
                "code": 8,
                "message": "ERROR_PENDING_SHUTDOWN"
            },
            "alreadyconnected": {
                "code": 9,
                "message": "ERROR_ALREADY_CONNECTED"
            },
            "connectionclosed": {
                "code": 10,
                "message": "ERROR_CONNECTION_CLOSED"
            },
            "timedout": {
                "code": 11,
                "message": "ERROR_TIMEDOUT"
            },
            "inprogress": {
                "code": 12,
                "message": "ERROR_INPROGRESS",
                "description": "Operation in progress"
            },
            "couldnotsetaddress": {
                "code": 13,
                "message": "ERROR_COULD_NOT_SET_ADDRESS"
            },
            "incorrecthash": {
                "code": 14,
                "message": "ERROR_INCORRECT_HASH",
                "description": "Incorrect hash given"
            },
            "incorrecturl": {
                "code": 15,
                "message": "ERROR_INCORRECT_URL",
                "description": "Incorrect URL given"
            },
            "invalidinputlength": {
                "code": 16,
                "message": "ERROR_INVALID_INPUT_LENGTH"
            },
            "destructionsucceeded": {
                "code": 17,
                "message": "ERROR_DESTRUCTION_SUCCEEDED"
            },
            "destructionfailed": {
                "code": 18,
                "message": "ERROR_DESTRUCTION_FAILED"
            },
            "closingfailed": {
                "code": 19,
                "message": "ERROR_CLOSING_FAILED"
            },
            "processterminated": {
                "code": 20,
                "message": "ERROR_PROCESS_TERMINATED"
            },
            "processkilled": {
                "code": 21,
                "message": "ERROR_PROCESS_KILLED"
            },
            "unknownkey": {
                "code": 22,
                "message": "ERROR_UNKNOWN_KEY"
            },
            "incompleteconfig": {
                "code": 23,
                "message": "ERROR_INCOMPLETE_CONFIG"
            },
            "privilegedrequest": {
                "code": 24,
                "message": "ERROR_PRIVILEGED_REQUEST"
            },
            "rpccallfailed": {
                "code": 25,
                "message": "ERROR_RPC_CALL_FAILED"
            },
            "unreachablenetwork": {
                "code": 26,
                "message": "ERROR_UNREACHABLE_NETWORK"
            },
            "requestsubmitted": {
                "code": 27,
                "message": "ERROR_REQUEST_SUBMITTED"
            },
                "unknowntable": {
                "code": 28,
                "message": "ERROR_UNKNOWN_TABLE"
            },
            "duplicatekey": {
                "code": 29,
                "message": "ERROR_DUPLICATE_KEY"
            },
            "badrequest": {
                "code": 30,
                "message": "ERROR_BAD_REQUEST"
            },
            "pendingconditions": {
                "code": 31,
                "message": "ERROR_PENDING_CONDITIONS"
            },
            "surfaceunavailable": {
                "code": 32,
                "message": "ERROR_SURFACE_UNAVAILABLE"
            },
            "playerunavailable": {
                "code": 33,
                "message": "ERROR_PLAYER_UNAVAILABLE"
            },
            "firstresourcenotfound": {
                "code": 34,
                "message": "ERROR_FIRST_RESOURCE_NOT_FOUND"
            },
            "secondsourcenotfound": {
                "code": 35,
                "message": "ERROR_SECOND_RESOURCE_NOT_FOUND"
            },
            "alreadyreleased": {
                "code": 36,
                "message": "ERROR_ALREADY_RELEASED"
            },
            "negtiveacknowledge": {
                "code": 37,
                "message": "ERROR_NEGATIVE_ACKNOWLEDGE"
            },
            "invalidsignature": {
                "code": 38,
                "message": "ERROR_INVALID_SIGNATURE"
            },
            "readerror": {
                "code": 39,
                "message": "ERROR_READ_ERROR"
            },
            "writeerror": {
                "code": 40,
                "message": "ERROR_WRITE_ERROR"
            },
            "invaliddesignator": {
                "code": 41,
                "message": "ERROR_INVALID_DESIGNATOR"
            },
            "unauthenticated": {
                "code": 42,
                "message": "ERROR_UNAUTHENTICATED"
            },
            "notexist": {
                "code": 43,
                "message": "ERROR_NOT_EXIST"
            },
            "notsupported": {
                "code": 44,
                "message": "ERROR_NOT_SUPPORTED"
            }
        },
        "results": {
            "void": {
                "type": "null",
                "default": null,
                "description": "Always null"
            }
        },
        "result": {
            "type":"object",
            "properties": {
                "success": {
                    "$ref": "#/common/success"
                }
            },
            "required": [
                "success"
            ]
        },
        "success": {
            "summary": "Whether the request succeeded",
            "type": "boolean",
            "example": "true"
        }
    },
    "definitions": {
        "supportedHDCPVersion": {
            "summary": "Supported HDCP protocol version by the host device.",
            "type": "string",
            "example": "2.2"
        },
        "HDCPStatus":{
            "summary": "Contains HDCP-related data as separate properties",
            "type": "object",
            "properties": {
                "isConnected": {
                    "summary": "Indicates whether a display is connected.",
                    "type": "boolean",
                    "example": false
                },
                "isHDCPCompliant": {
                    "summary": "Indicates whether the display is HDCP compliant.",
                    "type": "boolean",
                    "example": false
                },
                "isHDCPEnabled": {
                    "summary": "Indicates whether content is protected.",
                    "type": "boolean",
                    "example": false
                },
                "hdcpReason": {
                    "summary": "The HDCP status reason",
                    "type": "integer",
                    "example": 1
                },
                "supportedHDCPVersion": {
                    "$ref": "#/definitions/supportedHDCPVersion"
                },
                "receiverHDCPVersion": {
                    "summary": "Supported HDCP protocol version by the receiver device (display)",
                    "type": "string",
                    "example": "1.4"
                },
                "currentHDCPVersion": {
                    "summary": "Currently used HDCP protocol version",
                    "type": "string",
                    "example": "1.4"
                }
            },
            "required":[
                "isConnected",
                "isHDCPCompliant",
                "isHDCPEnabled",
                "hdcpReason",
                "supportedHDCPVersion",
                "receiverHDCPVersion",
                "currentHDCPVersion"
            ]
        }
    },
    "methods": {
        "getHDCPStatus": {
            "summary": "Returns HDCP-related data.  \n**hdcpReason Argument Values**  \n* `0`: HDMI cable is not connected or rx sense status is `off`  \n* `1`: Rx device is connected with power ON state, and HDCP authentication is not initiated  \n* `2`: HDCP success  \n* `3`:  HDCP authentication failed after multiple retries  \n* `4`:  HDCP authentication in progress   \n* `5`: HDMI video port is disabled.",
            "result": {
                "type":"object",
                "properties": {
                    "HDCPStatus":{
                        "$ref": "#/definitions/HDCPStatus"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                }, 
                "required": [
                    "HDCPStatus",
                    "success"
                ]               
            }
        },
        "getSettopHDCPSupport": {
            "summary": "Returns which version of HDCP is supported by the STB.",
            "result":{
                "type":"object",
                "properties": {
                    "supportedHDCPVersion":{
                        "$ref": "#/definitions/supportedHDCPVersion"
                    },
                    "isHDCPSupported": {
                        "description": "Indicates whether HDCP is supported by the STB",
                        "type": "boolean",
                        "example": true
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required":[
                    "supportedHDCPVersion",
                    "isHDCPSupported",
                    "success"
                ]
            }
        }
    },
    "events": {
        "onDisplayConnectionChanged":{
            "summary":"Triggered if HDMI was connected or disconnected upon receiving `onHdmiOutputHotPlug` event",
            "params":{
                "type":"object",
                "properties": {
                    "HDCPStatus":{
                        "$ref": "#/definitions/HDCPStatus"
                    } 
                }
            }
        }
    }
}

