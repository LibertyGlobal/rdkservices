{
    "$schema": "../../Thunder/Tools/JsonGenerator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "LgiDisplaySettings API",
        "class": "com.lgi.rdk.DisplaySettings",
        "description": "The `DisplaySetting` plugin provides an interface for display information such as current video resolution, supported video displays, zoom setting, sound mode, and much more."
    },
    "definitions": {
        "audioDelay": {
            "summary": "Delay (in ms) on the selected audio port",
            "type": "string",
            "example": "0"
        },
        "audioDelayOffset": {
            "summary": "Delay offset (in ms) on the selected audio port",
            "type": "string",
            "example": "0"
        },
        "audioPort0": {
            "summary": "Audio port name. An error returns if no port is specified.",
            "type": "string",
            "example": "HDMI0"
        },
        "connectedVideoDisplays": {
            "summary": "A string [] of connected video display port names",
            "type": "array",
            "items": {
                "type":"string",
                "example": "HDMI0"
            }
        },
        "EDID": {
            "summary": "A base64 encoded byte array string representing the EDID",
            "type": "string",
            "example": "AP///////wAQrMLQVEJTMQUdAQOANR546q11qVRNnSYPUFSlSwCBALMA0QBxT6lAgYDRwAEBVl4AoKCgKVAwIDUADighAAAaAAAA/wBNWTNORDkxVjFTQlQKAAAA/ABERUxMIFAyNDE4RAogAAAA/QAxVh1xHAAKICAgICAgARsCAxuxUJAFBAMCBxYBBhESFRMUHyBlAwwAEAACOoAYcTgtQFgsRQAOKCEAAB4BHYAYcRwWIFgsJQAOKCEAAJ6/FgCggDgTQDAgOgAOKCEAABp+OQCggDgfQDAgOgAOKCEAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2A"
        },
        "resolution": {
            "summary": "Video display resolution",
            "type": "string",
            "example": "1080p"
        },
        "soundMode": {
            "summary": "Sound mode. Possible values: `AUTO (Dolby Digital Plus)`, `AUTO (Dolby Digital 5.1)`, `AUTO (Stereo)`, `MONO`, `STEREO`, `SURROUND`, PASSTHRU.",
            "type":"string",
            "example":"STEREO"
        },
        "standards": {
            "summary": "A string [] of HDR capabilities. Possible values: `none`, `HDR10`, `Dolby Vision`, `Technicolor Prime`",
            "type": "array",
            "items": {
                "type": "string",
                "example": "none"
            }
        },
        "supportsHDR": {
            "summary": "Indicates support for HDR",
            "type":"boolean",
            "example": true
        },
        "videoDisplay": {
            "summary": "Video display port name. The default port is `HDMI0` if no port is specified",
            "default": "HDMI0",
            "type": "string",
            "example": "HDMI0"
        },
        "videoDisplayType": {
            "summary": "Type of video display (port)",
            "type": "string",
            "example": "HDMI0"
        },
        "zoomSetting": {
            "summary": "Zoom setting. Possible values: `FULL`,  `NONE,`  `Letterbox 16x9`, `Letterbox 14x9`, `CCO`, `PanScan`, `Letterbox 2.21 on 4x3`, `Letterbox 2.21 on 16x9`, `Platform`, `Zoom 16x9`, `Pillarbox 4x3`, `Widescreen 4x3`",
            "type": "string",
            "example": "FULL"
        },
        "result": {
            "type":"object",
            "properties": {
                "success": {
                    "$ref": "#/definitions/success"
                }
            },
            "required": [
                "success"
            ]
        },
        "success": {
            "summary": "Whether the request succeeded",
            "type": "boolean",
            "example": "true"
        }
    },
    "methods": {
        "getActiveInput":{
            "summary": "Returns `true` if the STB HDMI output is currently connected to the active input of the sink device (determined by `RxSense`). If the STB does not support `RxSense`, this API always returns `true`. Specifically:  \n`true`  \n* STB is connected to the TV's active Input, or  \n* Unable to determine if STB is connected to the TV's active input or not (because STB does not support `RxSense`)  \n  \n`false`  \n* STB is not connected to the TV's active input, or  \n* TV is OFF",
            "params": {
                "type":"object",
                "properties": {
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    }
                },
                "required": [
                    "videoDisplay"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "activeInput": {
                        "summary": "Determines whether selected input is active or not",
                        "type": "boolean",
                        "example": true
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "activeInput",
                    "success"
                ]
            }
        },
        "getAudioDelay":{
            "summary": "Returns the audio delay (in ms) on the selected audio port. If the `audioPort` argument is not specified, it will browse all ports (checking HDMI0 first). If there is no display connected, then it defaults to `HDMI0`.",
            "params": {
                "type":"object",
                "properties": {
                    "audioPort": {
                        "$ref": "#/definitions/audioPort0"
                    }
                },
                "required": [
                    "audioPort"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "audioDelay": {
                        "$ref": "#/definitions/audioDelay"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "audioDelay",
                    "success"
                ]
            }
        },
        "getAudioDelayOffset":{
            "summary": "Returns the audio delay offset (in ms) on the selected audio port. If the `audioPort` argument is not specified, it will browse all ports (checking HDMI0 first). If there is no display connected, then it defaults to `HDMI0`.",
            "params": {
                "type":"object",
                "properties": {
                    "audioPort": {
                        "$ref": "#/definitions/audioPort0"
                    }
                },
                "required": [
                    "audioPort"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "audioDelayOffset": {
                        "$ref": "#/definitions/audioDelayOffset"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "audioDelayOffset",
                    "success"
                ]
            }
        },
        "getConnectedAudioPorts":{
            "summary": "Returns connected audio output ports (a subset of the ports supported on the device). SPDIF port is always considered connected. HDMI port may or may not be connected.",
            "result": {
                "type":"object",
                "properties": {
                    "connectedAudioPorts": {
                        "summary": "A string [] of connected audio port names",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "HDMI0"
                        }
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "connectedAudioPorts",
                    "success"
                ]
            }
        },
        "getConnectedVideoDisplays":{
            "summary": "Returns connected video displays",
            "result": {
                "type": "object",
                "properties": {
                    "connectedVideoDisplays": {
                        "$ref": "#/definitions/connectedVideoDisplays"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "connectedVideoDisplays",
                    "success"
                ]
            }
        },
        "getCurrentOutputSettings":{
            "summary": "Returns current output settings",
            "result": {
                "type":"object",
                "properties": {
                    "colorSpace": {
                        "summary": "The color space. Possible values: `0` (dsDISPLAY_COLORSPACE_UNKNOWN), `1` (sDISPLAY_COLORSPACE_RGB, `2` (dsDISPLAY_COLORSPACE_YCbCr422), `3` (dsDISPLAY_COLORSPACE_YCbCr444), `4` (dsDISPLAY_COLORSPACE_YCbCr420), `5` (dsDISPLAY_COLORSPACE_AUTO).",
                        "type": "integer",
                        "example": 5
                    },
                    "colorDepth": {
                        "summary": "The color depth. The value that is returned from `dsGetCurrentOutputSettings`",
                        "type": "integer",
                        "example": 0 
                    },
                    "matrixCoefficients": {
                        "summary": "matrix coefficients. Possible values: `0` (dsDISPLAY_MATRIXCOEFFICIENT_UNKNOWN), `1` (dsDISPLAY_MATRIXCOEFFICIENT_BT_709), `2` (dsDISPLAY_MATRIXCOEFFICIENT_BT_470_2_BG), `3` (dsDISPLAY_MATRIXCOEFFICIENT_SMPTE_170M), `4` (dsDISPLAY_MATRIXCOEFFICIENT_XvYCC_709), `5` (dsDISPLAY_MATRIXCOEFFICIENT_eXvYCC_601), `6` (dsDISPLAY_MATRIXCOEFFICIENT_BT_2020_NCL), `7` (dsDISPLAY_MATRIXCOEFFICIENT_BT_2020_CL)",
                        "type": "integer",
                        "example": 0
                    },
                    "videoEOTF": {
                        "summary": "HDR standard. Possible values: `0x0` (dsHDRSTANDARD_NONE), `0x01` (dsHDRSTANDARD_HDR10), `0x02` (dsHDRSTANDARD_HLG), `0x04` (dsHDRSTANDARD_DolbyVision), `0x08` (dsHDRSTANDARD_TechnicolorPrime), `0x80` (dsHDRSTANDARD_Invalid)",
                        "type": "integer",
                        "example": 0
                    },
                    "quantizationRange": {
                        "summary": "The supported quantization range",
                        "type": "integer",
                        "example": 235
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "colorSpace",
                    "colorDepth",
                    "matrixCoefficients",
                    "videoEOTF",
                    "success"
                ]
            }
        },
        "getCurrentResolution":{
            "summary": "Returns the current resolution on the selected video display port",
            "params": {
                "type":"object",
                "properties": {
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    }
                },
                "required":[
                    "videoDisplay"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "resolution": {
                        "$ref": "#/definitions/resolution"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "resolution",
                    "success"
                ]
            }
        },
        "getSettopHDRSupport":{
            "summary": "Returns an HDR support object (list of standards that the STB supports)",
            "result": {
                "type":"object",
                "properties": {
                    "standards": {
                        "$ref": "#/definitions/standards"
                    },
                    "supportsHDR": {
                        "$ref": "#/definitions/supportsHDR"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "standards",
                    "supportsHDR",
                    "success"
                ]
            }
        },
        "getSoundMode":{
            "summary": "Returns the sound mode for the incoming video display. If the argument is `Null` or empty (although not recommended), this returns the output mode of all connected ports, whichever is connected, while giving priority to the HDMI port. If the video display is not connected, then it returns `Stereo` as a safe default",
            "params": {
                "type": "object",
                "properties": {
                    "audioPort": {
                        "$ref": "#/definitions/audioPort0"
                    }
                },
                "required": [
                    "audioPort"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "soundMode": {
                        "$ref": "#/definitions/soundMode"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "soundMode",
                    "success"
                ]
            }
        },
        "getSupportedAudioPorts": {
            "summary": "Returns all audio ports supported on the device (all ports that are physically present)",
            "result": {
                "type":"object",
                "properties": {
                    "supportedAudioPorts": {
                        "summary": "A string [] of supported audio ports",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "HDMI0"
                        }
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "supportedAudioPorts",
                    "success"
                ]
            }
        },
        "getSupportedResolutions":{
            "summary": "Returns supported resolutions on the selected video display port (both TV and STB) by its name.",
            "params": {
                "type": "object",
                "properties": {
                    "videoDisplay":{
                        "$ref": "#/definitions/videoDisplay"
                    }
                },
                "required": [
                    "videoDisplay"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "supportedResolutions":{
                        "summary": "A string array of supported resolutions on the selected video display port",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example":  "1080p60"
                        }
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "supportedResolutions",
                    "success"
                ]
            }
        },
        "getSupportedVideoDisplays":{
            "summary": "Returns all video ports supported on the device (all ports that are physically present)",
            "result": {
                "type":"object",
                "properties": {
                    "supportedVideoDisplays": {
                        "summary": "a string [] of supported video display ports",
                        "type":"array",
                        "items": {
                            "type": "string",
                            "example": "HDMI0"
                        }
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "supportedVideoDisplays",
                    "success"
                ]
            }
        },
        "getZoomSetting": {
            "summary": "Returns the zoom setting value",
            "result": {
                "type":"object",
                "properties": {
                    "zoomSetting": {
                        "$ref": "#/definitions/zoomSetting"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "zoomSetting",
                    "success"
                ]
            }
        },
        "readEDID":{
            "summary": "Reads the EDID from the connected HDMI (output) device. Returns a key of `EDID` with a value of the base64 encoded byte array string representing the EDID.",
            "result": {
                "type":"object",
                "properties": {
                    "EDID": {
                        "$ref": "#/definitions/EDID"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "EDID",
                    "success"
                ]
            }
        },
        "setAudioDelay":{
            "summary": "Sets the audio delay (in ms) on the selected audio port. If the `audioPort` argument is not specified, it will browse all ports (checking HDMI0 first). If there is no display connected, then it defaults to `HDMI0`.",
            "params": {
                "type":"object",
                "properties": {
                    "audioPort": {
                        "$ref": "#/definitions/audioPort0"
                    },
                    "audioDelay": {
                        "$ref": "#/definitions/audioDelay"
                    }
                },
                "required": [
                    "audioPort",
                    "audioDelay"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setAudioDelayOffset":{
            "summary": "Sets the audio delay offset (in ms) on the selected audio port. If the `audioPort` argument is not specified, it will browse all ports (checking HDMI0 first). If there is no display connected, then it defaults to `HDMI0`.",
            "params": {
                "type":"object",
                "properties": {
                    "audioPort": {
                        "$ref": "#/definitions/audioPort0"
                    },
                    "audioDelayOffset": {
                        "$ref": "#/definitions/audioDelayOffset"
                    }
                },
                "required": [
                    "audioPort",
                    "audioDelayOffset"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setCurrentResolution":{
            "summary": "Sets the current resolution",
            "params": {
                "type": "object",
                "properties": {
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    },
                    "resolution": {
                        "$ref": "#/definitions/resolution"
                    }
                },
                "required": [
                    "videoDisplay",
                    "resolution"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setScartParameter":{
            "summary": "Sets SCART parameters.  \n   \nPossible values:  \n| **Parameter** | **ParameterData** |  \n| `aspect_ratio` | `4x3` or `16x9` |  \n| `tv_startup` | `on` or `off` |  \n| `rgb` | `on` (disables cvbs) |  \n| `cvbs` | `on` (disables rgb) |  \n| `macrovision` | not implemented |  \n| `cgms` |  `disabled`, `copyNever`, `copyOnce`, `copyFreely`, or `copyNoMore` |  \n| `port` | `on` or `off` |",
            "params": {
                "type":"object",
                "properties": {
                    "scartParameter": {
                        "summary": "SCART parameter name",
                        "type": "string",
                        "example": "aspect_ratio"
                    },
                    "scartParameterData": {
                        "summary": "SCART parameter data",
                        "type": "string",
                        "example": "4x3"
                    }
                },
                "required": [
                    "scartParameter",
                    "scartParameterDelay"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setSoundMode":{
            "summary": "Sets the current sound mode for the corresponding video display. If the `audioPort` argument value is missing or empty all ports are set.",
            "params": {
                "type": "object",
                "properties": {
                    "audioPort": {
                        "$ref": "#/definitions/audioPort0"
                    },
                    "soundMode": {
                        "$ref": "#/definitions/soundMode"
                    },
                    "persist": {
                        "summary": "persists the sound mode",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "audioPort",
                    "soundMode",
                    "persist"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setZoomSetting": {
            "summary": "Sets the current zoom value",
            "params": {
                "type":"object",
                "properties":{
                    "zoomSetting": {
                        "$ref": "#/definitions/zoomSetting"
                    }
                },
                "required":[
                    "zoomSetting"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setOutputFrameRatePreference": {
            "summary": "Sets the current output frame rate follow content preference",
            "params": {
                "type":"object",
                "properties":{
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    },
                    "followContent": {
                        "summary": "should follow content frame rate",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required":[
                    "followContent"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setAudioProcessingHint": {
            "summary": "Sets audio processing hint",
            "params": {
                "type":"object",
                "properties":{
                    "audioPort": {
                        "summary": "Audio port ID",
                        "type": "string",
                        "example": "HDMI0"
                    },
                    "audioMode": {
                        "summary": "Audio mode - dd/pcm",
                        "type": "string",
                        "example": "pcm"
                    },
                    "audioDelayMs": {
                        "summary": "audio delay [ms]",
                        "type": "integer",
                        "example": 50
                    }
                },
                "required":[
                    "audioMode"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "getAudioOutputEncoding": {
            "summary": "gets current audio output encoding",
            "params": {
                "type":"object",
                "properties":{
                    "audioPort": {
                        "summary": "Audio port ID",
                        "type": "string",
                        "example": "HDMI0"
                    }
                },
                "required":[
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "encoding": {
                        "summary": "audio encoding type",
                        "type": "string",
                        "example": "PCM"
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "encoding",
                    "success"
                ]
            }
        },
        "getFollowColorSpace": {
            "summary": "get current follow colorspace setting",
            "params": {
                "type":"object",
                "properties":{
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    }
                },
                "required":[
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "followColorSpace": {
                        "summary": "should follow colorspace",
                        "type": "boolean",
                        "example": true
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "followColorSpace",
                    "success"
                ]
            }
        },
        "setFollowColorSpace": {
            "summary": "set current follow colorspace setting",
            "params": {
                "type":"object",
                "properties":{
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    },
                    "followColorSpace": {
                        "summary": "should follow color space",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required":[
                    "followColorSpace"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "getPreferredOutputColorSpace": {
            "summary": "get current preferred output colorspace",
            "params": {
                "type":"object",
                "properties":{
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    }
                },
                "required":[
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "preferredOutputColorSpaces": {
                        "summary": "A string [] of preferred colorspaces",
                        "type": "array",
                        "items": {
                            "type":"string",
                            "example": "BT2020_NCL"
                        }
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "preferredOutputColorSpaces",
                    "success"
                ]
            }
        },
        "setPreferredOutputColorSpace": {
            "summary": "set current preferred output colorspace",
            "params": {
                "type":"object",
                "properties": {
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    },
                    "colorSpaces": {
                        "summary": "A string [] of preferred colorspaces",
                        "type": "array",
                        "items": {
                            "type":"string",
                            "example": "BT2020_NCL"
                        }
                    }
                },
                "required": [
                    "colorSpaces"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "success"
                ]
            }
        },
        "getHDRGfxColorSpace": {
            "summary": "Gets current HDR gfx colorspace values",
            "params": {
                "type":"object",
                "properties":{
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    }
                },
                "required":[
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "y": {
                        "summary": "y value",
                        "type": "integer",
                        "example": 0
                    },
                    "cr": {
                        "summary": "cr value",
                        "type": "integer",
                        "example": 0
                    },
                    "cb": {
                        "summary": "cb value",
                        "type": "integer",
                        "example": 0
                    },
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "y",
                    "cr",
                    "cb",
                    "success"
                ]
            }
        },
        "setHDRGfxColorSpace": {
            "summary": "Sets current HDR gfx colorspace values",
            "params": {
                "type":"object",
                "properties":{
                    "videoDisplay": {
                        "$ref": "#/definitions/videoDisplay"
                    },
                    "y": {
                        "summary": "y value",
                        "type": "integer",
                        "example": 0
                    },
                    "cr": {
                        "summary": "cr value",
                        "type": "integer",
                        "example": 0
                    },
                    "cb": {
                        "summary": "cb value",
                        "type": "integer",
                        "example": 0
                    }
                },
                "required":[
                    "y",
                    "cr",
                    "cb"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "success": {
                        "$ref": "#/definitions/success"
                    }
                },
                "required": [
                    "success"
                ]
            }
        }
    },
    "events": {
        "activeInputChanged":{
            "summary": "Triggered on active input change (RxSense)",
            "params": {
                "type":"object",
                "properties": {
                    "activeInput": {
                        "summary": "`true` = RXSENSE_ON, `false` = RXSENSE_OFF",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "activeInput"
                ]
            }
        },
        "connectedAudioPortUpdated":{
            "summary": "Triggered when the connected audio port is updated",
            "params": {
                "type":"object",
                "properties": {
                    "HotpluggedAudioPort": {
                        "summary": "Audio port ID for which the connection status has changed. Possible audio port IDs are (`HDMI_ARC0`, `HEADPHONE0`,  etc).",
                        "type": "string",
                        "example": "HDMI_ARC0"
                    },
                    "isConnected": {
                        "summary": "Current connection status of the audio port",
                        "enum": [
                            "connected",
                            "disconnected"
                        ],
                        "type": "string",
                        "example": "connected"
                    }
                },
                "required": [
                    "HotPuggedAudioPort",
                    "isConnected"
                ]
            }
        },
        "connectedVideoDisplaysUpdated":{
            "summary": "Triggered when the connected video display is updated and returns the connected video displays.",
            "params": {
                "type":"object",
                "properties": {
                    "connectedVideoDisplays": {
                        "$ref": "#/definitions/connectedVideoDisplays"
                    }
                },
                "required": [
                    "connectedVideoDisplays"
                ]
            }
        },
        "resolutionChanged":{
            "summary": "Triggered when the resolution is changed by the user and returns the current resolution",
            "params": {
                "type":"object",
                "properties": {
                    "width": {
                        "summary": "Width of the video display",
                        "type": "integer",
                        "example": 1920
                    },
                    "height": {
                        "summary": "Height of the video display",
                        "type": "integer",
                        "example": 1080
                    },
                    "videoDisplayType": {
                        "$ref": "#/definitions/videoDisplayType"
                    },
                    "resolution": {
                        "$ref": "#/definitions/resolution"
                    }
                },
                "required": [
                    "width",
                    "height",
                    "videoDisplayType",
                    "resolution"
                ]
            }
        },
        "resolutionPreChange": {
            "summary": "Triggered on resolution pre-change"
        },
        "zoomSettingUpdated":{
            "summary": "Triggered when the zoom setting changes and returns the zoom setting values for all video display types",
            "params": {
                "type":"object",
                "properties": {
                    "zoomSetting": {
                        "$ref": "#/definitions/zoomSetting"
                    },
                    "videoDisplayType": {
                        "$ref": "#/definitions/videoDisplayType"
                    }
                },
                "required": [
                    "zoomSetting",
                    "videoDisplayType"
                ]
            }
        }
    }
}
