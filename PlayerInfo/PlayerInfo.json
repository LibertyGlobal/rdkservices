{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "PlayerInfo API",
        "class": "PlayerInfo",
        "description": "The `PlayerInfo` plugin helps to get system supported audio and video codecs"
    },
    "common": {
        "errors": {
            "general": {
                "code": 1,
                "message": "ERROR_GENERAL"
            },
            "unavailable": {
                "code": 2,
                "message": "ERROR_UNAVAILABLE"
            },
            "asyncfailed": {
                "code": 3,
                "message": "ERROR_ASYNC_FAILED"
            },
            "asyncaborted": {
                "code": 4,
                "message": "ERROR_ASYNC_ABORTED"
            },
            "illegalstate": {
                "code": 5,
                "message": "ERROR_ILLEGAL_STATE"
            },
            "openingfailed": {
                "code": 6,
                "message": "ERROR_OPENING_FAILED"
            },
            "acceptfailed": {
                "code": 7,
                "message": "ERROR_ACCEPT_FAILED"
            },
            "pendingshutdown": {
                "code": 8,
                "message": "ERROR_PENDING_SHUTDOWN"
            },
            "alreadyconnected": {
                "code": 9,
                "message": "ERROR_ALREADY_CONNECTED"
            },
            "connectionclosed": {
                "code": 10,
                "message": "ERROR_CONNECTION_CLOSED"
            },
            "timedout": {
                "code": 11,
                "message": "ERROR_TIMEDOUT"
            },
            "inprogress": {
                "code": 12,
                "message": "ERROR_INPROGRESS",
                "description": "Operation in progress"
            },
            "couldnotsetaddress": {
                "code": 13,
                "message": "ERROR_COULD_NOT_SET_ADDRESS"
            },
            "incorrecthash": {
                "code": 14,
                "message": "ERROR_INCORRECT_HASH",
                "description": "Incorrect hash given"
            },
            "incorrecturl": {
                "code": 15,
                "message": "ERROR_INCORRECT_URL",
                "description": "Incorrect URL given"
            },
            "invalidinputlength": {
                "code": 16,
                "message": "ERROR_INVALID_INPUT_LENGTH"
            },
            "destructionsucceeded": {
                "code": 17,
                "message": "ERROR_DESTRUCTION_SUCCEEDED"
            },
            "destructionfailed": {
                "code": 18,
                "message": "ERROR_DESTRUCTION_FAILED"
            },
            "closingfailed": {
                "code": 19,
                "message": "ERROR_CLOSING_FAILED"
            },
            "processterminated": {
                "code": 20,
                "message": "ERROR_PROCESS_TERMINATED"
            },
            "processkilled": {
                "code": 21,
                "message": "ERROR_PROCESS_KILLED"
            },
            "unknownkey": {
                "code": 22,
                "message": "ERROR_UNKNOWN_KEY"
            },
            "incompleteconfig": {
                "code": 23,
                "message": "ERROR_INCOMPLETE_CONFIG"
            },
            "privilegedrequest": {
                "code": 24,
                "message": "ERROR_PRIVILEGED_REQUEST"
            },
            "rpccallfailed": {
                "code": 25,
                "message": "ERROR_RPC_CALL_FAILED"
            },
            "unreachablenetwork": {
                "code": 26,
                "message": "ERROR_UNREACHABLE_NETWORK"
            },
            "requestsubmitted": {
                "code": 27,
                "message": "ERROR_REQUEST_SUBMITTED"
            },
                "unknowntable": {
                "code": 28,
                "message": "ERROR_UNKNOWN_TABLE"
            },
            "duplicatekey": {
                "code": 29,
                "message": "ERROR_DUPLICATE_KEY"
            },
            "badrequest": {
                "code": 30,
                "message": "ERROR_BAD_REQUEST"
            },
            "pendingconditions": {
                "code": 31,
                "message": "ERROR_PENDING_CONDITIONS"
            },
            "surfaceunavailable": {
                "code": 32,
                "message": "ERROR_SURFACE_UNAVAILABLE"
            },
            "playerunavailable": {
                "code": 33,
                "message": "ERROR_PLAYER_UNAVAILABLE"
            },
            "firstresourcenotfound": {
                "code": 34,
                "message": "ERROR_FIRST_RESOURCE_NOT_FOUND"
            },
            "secondsourcenotfound": {
                "code": 35,
                "message": "ERROR_SECOND_RESOURCE_NOT_FOUND"
            },
            "alreadyreleased": {
                "code": 36,
                "message": "ERROR_ALREADY_RELEASED"
            },
            "negtiveacknowledge": {
                "code": 37,
                "message": "ERROR_NEGATIVE_ACKNOWLEDGE"
            },
            "invalidsignature": {
                "code": 38,
                "message": "ERROR_INVALID_SIGNATURE"
            },
            "readerror": {
                "code": 39,
                "message": "ERROR_READ_ERROR"
            },
            "writeerror": {
                "code": 40,
                "message": "ERROR_WRITE_ERROR"
            },
            "invaliddesignator": {
                "code": 41,
                "message": "ERROR_INVALID_DESIGNATOR"
            },
            "unauthenticated": {
                "code": 42,
                "message": "ERROR_UNAUTHENTICATED"
            },
            "notexist": {
                "code": 43,
                "message": "ERROR_NOT_EXIST"
            },
            "notsupported": {
                "code": 44,
                "message": "ERROR_NOT_SUPPORTED"
            }
        },
        "results": {
            "void": {
                "type": "null",
                "default": null,
                "description": "Always null"
            }
        },
        "result": {
            "type":"object",
            "properties": {
                "success": {
                    "$ref": "#/common/success"
                }
            },
            "required": [
                "success"
            ]
        },
        "success": {
            "summary": "Whether the request succeeded",
            "type": "boolean",
            "example": "true"
        }
    },
    "definitions": {
        
        "audiocodecs": {
            "description": "Audio Codec supported by the platform",
            "type": "string",
            "enum": [
                "Undefined",
                "AAC",
                "AC3",
                "AC3Plus",
                "DTS",
                "MPEG1",
                "MPEG2",
                "MPEG3",
                "MPEG4",
                "OPUS",
                "VorbisOGG",
                "WAV"
            ],
            "enumvalues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11
            ],
            "example": "AudioAAC"
        },
        "videocodecs": {
            "description": "Video Codec supported by the platform",
            "type": "string",
            "enum": [
                "Undefined",
                "H263",
                "H264",
                "H265",
                "H26510",
                "MPEG",
                "VP8",
                "VP9",
                "VP10"
            ],
            "enumvalues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "example": "VideoH264"
        },
        "codecs": {
            "type": "object",
            "properties": {
                "audio": {
                    "type": "array",
                    "items": {
                    "$ref": "#/definitions/audiocodecs"
                    }
                },
                "video": {
                    "type": "array",
                    "items": {
                    "$ref": "#/definitions/videocodecs"
                    }
                }
            },
            "required": [
                "audio",
                "video"
            ]
        }
    },
    "methods": {
        "audiocodecs": {
            "summary": "Returns the audio codec supported by the platform.",
            "result": {
                "type":"array",
                "items": {
                    "type": "string",
                    "enum": [
                        "AudioUndefined",
                        "AudioAac",
                        "AudioAc3",
                        "AudioAc3Plus",
                        "AudioDts",
                        "AudioMpeg1",
                        "AudioMpeg2",
                        "AudioMpeg3",
                        "AudioMpeg4",
                        "AudioOpus",
                        "AudioVorbisOgg",
                        "AudioWav"
                    ],
                    "example": "AudioUndefined"
                }
            }
        },
        "videocodecs": {
            "summary": "Returns the video codec supported by the platform.",
            "result": {
                "type":"array",
                "items": {
                    "type": "string",
                    "enum": [
                        "VideoUndefined",
                        "VideoH263",
                        "VideoH264",
                        "VideoH265",
                        "VideoH26510",
                        "VideoMpeg",
                        "VideoVp8",
                        "VideoVp9",
                        "VideoVp10"
                    ],
                    "example": "VideoUndefined"
                }
            }
        }
    },
    "properties": {
        "playerinfo":{
            "summary": "Player general information",
            "readonly": true,
            "params": {
                "$ref": "#/definitions/codecs"
            }
        },
        "resolution": {
            "summary": "Current configured video output port resolution",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [
                    "ResolutionUnknown",
                    "Resolution480I",
                    "Resolution480P",
                    "Resolution576I",
                    "Resolution576P",
                    "Resolution720P",
                    "Resolution1080I",
                    "Resolution1080P",
                    "Resolution2160P30",
                    "Resolution2160P60"
                ],
                "example": "ResolutionUnknown"
            }
        },
        "isaudioequivalenceenabled": {
            "summary": "Check for Loudness Equivalence in the platform",
            "readonly": true,
            "params": {
                "type": "boolean",
                "example": false
            }
        },
        "dolby_atmosmetadata":{
            "summary": "Atmos capabilities of Sink",
            "readonly": true,
            "params": {
                "type": "boolean",
                "example": false
            }
        },
        "dolby_soundmode":{
            "summary": "Current sound mode",
            "readonly": true,
            "params": {
                "type": "string",
                "enum": [
                    "Unknown",
                    "Mono",
                    "Stereo",
                    "Surround",
                    "Passthru"
                ],
                "example": "Unknown"
            }
        },
        "dolby_enableatmosoutput":{
            "summary": "Audio output enablement for Atmos",
            "writeonly": true,
            "params": {
                "type": "boolean",
                "example": false
            }
        },
        "dolby_mode":{
            "summary": "Dolby mode",
            "params": {
                "type": "string",
                "enum": [
                    "DigitalPcm",
                    "DigitalPlus",
                    "DigitalAc3",
                    "Auto",
                    "Ms12"
                ],
                "example": "DigitalPcm"
            }
        }
    },
    "events": {
        "dolby_audiomodechanged": {
            "summary": "Triggered after the audio sound mode changes",
            "params": {
                "type": "object",
                "properties": {
                    "mode":{
                        "summary": "The sound mode",
                        "type": "string",
                        "enum": [
                            "Unknown",
                            "Mono",
                            "Stereo",
                            "Surround",
                            "Passthru"
                        ],
                        "example": "Unknown"
                    },
                    "enable":{
                        "summary": "",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "mode",
                    "enable"
                ]
            }
        }
    }
}
